{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navigation/Navigation.tsx","App.tsx","Pages/HomePage.tsx","Pages/Page404.tsx","api.ts","components/PersonInfo/PersonInfo.tsx","components/PeopleList/PeopleList.tsx","components/Loader/Loader.tsx","components/People/People.tsx","index.tsx"],"names":["PageNavLink","url","title","className","isActive","classNames","to","PageNavigation","role","App","HomePage","PageNotFound","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonInfo","person","mother","father","name","sex","born","died","motherName","fatherName","slug","isSelected","useParams","personSlug","PeopleList","people","map","find","human","Loader","PeopleTable","useState","peopleList","setPeopleList","isLoading","setIsLoading","errorMessage","setErrorMessage","fetchPeople","useEffect","length","createRoot","document","getElementById","render","path","element","replace","index"],"mappings":"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","file":"static/js/main.965a692e.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  url: string,\n  title: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({ url, title }) => (\n  <NavLink\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n    to={`${url}`}\n  >\n    {title}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink/PageNavLink';\n\nexport const PageNavigation: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink url=\"/\" title=\"Home\" />\n        <PageNavLink url=\"people\" title=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport { PageNavigation } from './components/Navigation/Navigation';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <PageNavigation />\n      <div className=\"container\">\n        <main className=\"section\">\n          <Outlet />\n        </main>\n      </div>\n    </div>\n  );\n};\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const PageNotFound: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n  mother?: Person;\n  father?: Person;\n};\n\nexport const PersonInfo: React.FC<Props> = ({ person, mother, father }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n  } = person;\n\n  const { personSlug } = useParams();\n\n  const isSelected = slug === personSlug;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      key={person.slug}\n      className={classNames({\n        'has-background-warning': isSelected,\n      })}\n    >\n      <td>\n        <Link\n          to={`../${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>\n        {sex}\n      </td>\n\n      <td>\n        {born}\n      </td>\n\n      <td>\n        {died}\n      </td>\n\n      {mother\n        ? (\n          <td>\n            <Link\n              to={`../${mother.slug}`}\n              className=\"has-text-danger\"\n            >\n              {mother.name}\n            </Link>\n          </td>\n        )\n        : (\n          <td>{motherName || '-'}</td>\n        )}\n\n      {father ? (\n        <td>\n          <Link to={`../${father.slug}`}>\n            {father.name}\n          </Link>\n        </td>\n      ) : (\n        <td>{fatherName || '-'}</td>\n      )}\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonInfo } from '../PersonInfo/PersonInfo';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleList: React.FC<Props> = ({ people }) => {\n  return (\n    <>\n      {people.map((person) => {\n        const mother = people.find(human => human.name === person.motherName);\n        const father = people.find(human => human.name === person.fatherName);\n\n        return (\n          <PersonInfo\n            person={person}\n            mother={mother}\n            father={father}\n            key={person.slug}\n          />\n        );\n      })}\n    </>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useState, useEffect } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleList } from '../PeopleList/PeopleList';\nimport { Loader } from '../Loader';\n\n// type Props = {\n//   people: Person[];\n//   personSlug?: string;\n// };\n\nexport const PeopleTable: React.FC = () => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const fetchPeople = async () => {\n    try {\n      // setIsLoading(true);\n\n      const people = await getPeople();\n\n      setPeopleList(people);\n    } catch {\n      setErrorMessage('No ethernet connection');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  if (errorMessage) {\n    return (\n      <>\n        <h1 className=\"title\">People Page</h1>\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            <p data-cy=\"peopleLoadingError\">{errorMessage}</p>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  if (peopleList.length === 0 && !isLoading) {\n    return (\n      <>\n        <h1 className=\"title\">People Page</h1>\n        <div className=\"block\">\n          <div className=\"box table-container\">\n            <p data-cy=\"noPeopleMessage\">There are no people on the server</p>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <>\n          <h1 className=\"title\">People Page</h1>\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              <Loader />\n            </div>\n          </div>\n        </>\n      ) : (\n        <>\n          <h1 className=\"title\">People Page</h1>\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              {/* <Loader />\n\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p> */}\n\n              <table\n                data-cy=\"peopleTable\"\n                className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>Name</th>\n\n                    <th>Sex</th>\n\n                    <th>Born</th>\n\n                    <th>Died</th>\n\n                    <th>Mother</th>\n\n                    <th>Father</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  <PeopleList people={peopleList} />\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  Navigate, Route, HashRouter as Router, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './Pages/HomePage';\nimport { PageNotFound } from './Pages/Page404';\nimport { PeopleTable } from './components/People/People';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement).render(\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"*\" element={<PageNotFound />} />\n        <Route path=\"/\" element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"people\">\n          <Route index element={<PeopleTable />} />\n          <Route path=\":personSlug\" element={<PeopleTable />} />\n        </Route>\n      </Route>\n    </Routes>\n  </Router>,\n);\n"],"sourceRoot":""}